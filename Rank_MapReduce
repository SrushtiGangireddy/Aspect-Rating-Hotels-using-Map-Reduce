import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.filecache.DistributedCache;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;

import java.io.*;

import org.apache.hadoop.fs.FileSystem;
import org.json.simple.JSONObject;




public class Rank_MapReduce extends Configured implements Tool{

	public int run(String[] args) throws Exception {
		
		Job job=Job.getInstance(getConf());
		
		job.addCacheFile(new Path("/home/ubuntu/json-simple-1.1.jar").toUri());
		
		System.out.println(new Path("/home/ubuntu/json-simple-1.1.jar").toUri());
		
		System.out.println(job.getMapperClass());
		job.setMapperClass(Rank_Mapper.class);
		System.out.println(job.getMapperClass());
		job.setReducerClass(Rank_Reducer.class);
		System.out.println(job.getReducerClass());
		
		job.setJarByClass(getClass());
		
		job.addFileToClassPath(new Path("/home/ubuntu/json-simple-1.1.jar"));
		
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(DoubleWritable.class);
		
		
		FileInputFormat.setInputPaths(job,new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));
		
		job.setNumReduceTasks(1);
		
		job.setInputFormatClass(TextInputFormat.class);
		job.setOutputFormatClass(TextOutputFormat.class);
		
		
		return job.waitForCompletion(true) ? 0:1;
	}
	
	public static void main(String args[]) throws Exception{
		
		
		
		System.exit(ToolRunner.run(new Rank_MapReduce(), args));
	}
	
	
	
}
